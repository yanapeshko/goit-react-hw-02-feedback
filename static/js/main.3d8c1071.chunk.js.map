{"version":3,"sources":["components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","components/App/App.jsx","index.js"],"names":["Statistics","statistics","total","positivePercentage","map","key","value","FeedbackOptions","options","onLeaveFeedback","option","type","name","onClick","shortid","generate","Section","title","children","Notification","message","App","state","good","neutral","bad","countTotalFeedback","Object","values","reduce","acc","countPositiveFeedbackPercentage","result","percentage","Math","round","e","target","setState","prevState","this","keys","entries","Component","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"gQAuBeA,EApBI,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,WAAYC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBACvC,OACE,+BACGF,EAAWG,KAAI,mCAAEC,EAAF,KAAOC,EAAP,YACd,+BACGD,EADH,KACUC,QAGZ,wCAAWJ,KACX,oDAAuBC,EAAvB,Y,gBCaSI,EArBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,mCACGD,EAAQJ,KAAI,SAAAM,GAAM,OACjB,wBAEEC,KAAK,SACLC,KAAMF,EACNG,QAASJ,EAJX,SAMGC,GALII,IAAQC,kBCMRC,EAZC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,MCEQC,EANM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCEQC,E,4MACnBC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPC,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKN,OAAOO,QAAO,SAACC,EAAKxB,GAAN,OAAgBwB,EAAMxB,IAAO,I,EAGvEyB,gCAAkC,WAChC,IAAMC,EAAS,EAAKN,qBAEdO,EAAqB,IADV,EAAKX,MAAdC,KAC0BS,EAClC,OAAOE,KAAKC,MAAMF,I,EAGpBxB,gBAAkB,SAAA2B,GAChB,IAAMxB,EAAOwB,EAAEC,OAAOzB,KACtB,EAAK0B,UAAS,SAAAC,GAAS,sBACpB3B,EAAO2B,EAAU3B,GAAQ,O,4CAI9B,WACE,IAAMV,EAAQsC,KAAKd,qBACbvB,EAAqBqC,KAAKT,kCAC1BvB,EAAUmB,OAAOc,KAAKD,KAAKlB,OAC3BrB,EAAa0B,OAAOe,QAAQF,KAAKlB,OACvC,OACE,qCACE,cAAC,EAAD,CAASL,MAAM,wBAAf,SACE,cAAC,EAAD,CACET,QAASA,EACTC,gBAAiB+B,KAAK/B,oBAGf,IAAVP,GAAe,cAAC,EAAD,CAAckB,QAAQ,sBACrClB,EAAQ,GACP,cAAC,EAAD,CAASe,MAAM,aAAf,SACE,cAAC,EAAD,CACEhB,WAAYA,EACZC,MAAOA,EACPC,mBAAoBA,a,GA5CDwC,a,MCDjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,cAAc,Y","file":"static/js/main.3d8c1071.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Statistics = ({ statistics, total, positivePercentage }) => {\n  return (\n    <ul>\n      {statistics.map(([key, value]) => (\n        <li>\n          {key}: {value}\n        </li>\n      ))}\n      <li>Total:{total}</li>\n      <li>Positive feedback:{positivePercentage} %</li>\n    </ul>\n  );\n};\n\nStatistics.propTypes = {\n  statistics: PropTypes.array.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <>\n      {options.map(option => (\n        <button\n          key={shortid.generate()}\n          type=\"button\"\n          name={option}\n          onClick={onLeaveFeedback}\n        >\n          {option}\n        </button>\n      ))}\n    </>\n  );\n};\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return <p>{message}</p>;\n};\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\nexport default Notification;\n","import React, { Component } from 'react';\nimport Statistics from '../Statistics';\nimport FeedbackOptions from '../FeedbackOptions';\nimport Section from '../Section';\nimport Notification from '../Notification';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((acc, value) => acc + value, 0);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const result = this.countTotalFeedback();\n    const { good } = this.state;\n    const percentage = (good * 100) / result;\n    return Math.round(percentage);\n  };\n\n  onLeaveFeedback = e => {\n    const name = e.target.name;\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  render() {\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    const options = Object.keys(this.state);\n    const statistics = Object.entries(this.state);\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n        {total === 0 && <Notification message=\"No feedback given\" />}\n        {total > 0 && (\n          <Section title=\"Statistics\">\n            <Statistics\n              statistics={statistics}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          </Section>\n        )}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}